/********************************************************
 *  NSDictionary+MultiKeys.m
 *
 *  Created by J2Objc(Json to objc) on {{date}}.
 *  Copyright (c) 2013 WesleyYang. All rights reserved.
 *
 *  THIS FILE IS AUTO-GENERATED BY J2OBJC. DO NOT TRY TO
 *  MODIFY IT UNLESS YOU ARE NOT RELYING ON J2OBJC FOR
 *  MAKING ANY CHANGES!
 *
 ********************************************************/

#import "NSDictionary+MultiKeys.h"

@implementation NSDictionary (MultiKeys)


-(id)objectForPossibleKeys:(NSArray *)pkeys
{
    if (self.allKeys==nil || self.allKeys.count==0 || pkeys==nil || pkeys.count==0)
        return nil;
    
    
    id weakResultObj = nil;
    
    for (NSString* onePKey in pkeys) {
        //try origin key
        id obj = [self objectForKeyEx:onePKey];
        if (obj) {
            //found exact the same key
            return  obj;
        }
        
        //try weak key
        NSArray *wKeys = [self weakKeysOfName:onePKey];
        if (wKeys==nil || wKeys.count==0) {
            continue;
        }
        
        if (wKeys.count>1) {
            //find mutikeys with almost same name

            //take the first as weak result
            weakResultObj = [self objectForKeyEx:wKeys[0]];
            
        }else{//wKeys.count == 1
            
            weakResultObj = [self objectForKeyEx:wKeys[0]];
            
        }
        
    
    }

#if DEBUG_NSDICTIONARY_MULTIKEYS
    if(weakResultObj){
        NSLog(@"[NSDictioanry objectForPossibleKeys:] returned weak result. Keys:%@",pkeys);
    }
#endif


    return weakResultObj;

    
}


-(id)objectForKeyEx:(id)aKey
{
    if (aKey == nil) {
        return nil;
    }
    
    id obj = [self objectForKey:aKey];
    
    if ([obj isKindOfClass:[NSNull class]]) {
        return  nil;
    }
    
    return obj;
}


-(NSArray*)weakKeysOfName:(NSString*)name
{
    NSMutableArray *resArray = [NSMutableArray array];
    
    NSString *stdName = [self normalizedString:name];
    for (NSString *oneKey in self.allKeys) {
        NSString *stdKey = [self normalizedString:oneKey];
        if (stdKey && [stdKey isEqualToString:stdName]) {
            [resArray addObject:oneKey];
        }
    }
    
    return resArray;
}


// make two types of naming: "name_id" and "nameId" same.
// replace - _ and make lowercase
-(NSString*)normalizedString:(NSString*)str
{
    NSString *resultStr = [str stringByReplacingOccurrencesOfString:@"_" withString:@""];
    resultStr = [resultStr stringByReplacingOccurrencesOfString:@"-" withString:@""];
    resultStr = [resultStr lowercaseString];
    return resultStr;
}


@end
